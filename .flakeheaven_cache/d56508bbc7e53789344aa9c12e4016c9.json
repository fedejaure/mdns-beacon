{"results": [["flake8-annotations", "ANN101", 37, 19, "Missing type annotation for self in method", "    def renderable(self) -> Spinner:\n"], ["pylint", "C1803", 85, 15, "'layout.services == {}' can be simplified to 'not layout.services' as an empty dict is falsey (use-implicit-booleaness-not-comparison)", "        assert layout.services == {}\n"], ["pylint", "C1803", 92, 15, "'layout.services == {}' can be simplified to 'not layout.services' as an empty dict is falsey (use-implicit-booleaness-not-comparison)", "        assert layout.services == {}\n"], ["pylint", "E0401", 6, 0, "Unable to import 'pytest' (import-error)", "import pytest\n"], ["pylint", "E0401", 7, 0, "Unable to import 'pytest_mock' (import-error)", "from pytest_mock import MockerFixture\n"], ["pylint", "E0401", 11, 0, "Unable to import 'zeroconf' (import-error)", "from zeroconf import ServiceStateChange\n"], ["flake8-bandit", "S101", 55, 0, "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.", "        assert expected in render(layout.renderable)\n"], ["flake8-bandit", "S101", 57, 0, "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.", "    assert not live._started\n"], ["flake8-bandit", "S101", 85, 0, "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.", "        assert layout.services == {}\n"], ["flake8-bandit", "S101", 92, 0, "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.", "        assert layout.services == {}\n"], ["flake8-bandit", "S101", 94, 0, "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.", "    assert not live._started\n"], ["pylint", "W0124", 83, 4, "Following \"as\" with another context manager looks like a tuple. (confusing-with-statement)", "    with Live(\"\") as live, raises:\n"], ["pylint", "W0212", 57, 15, "Access to a protected member _started of a client class (protected-access)", "    assert not live._started\n"], ["pylint", "W0212", 94, 15, "Access to a protected member _started of a client class (protected-access)", "    assert not live._started\n"]], "digest": "2d7fc0ec47e6fcfabba8373eed57ca33"}
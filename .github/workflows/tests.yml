
name: tests
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - develop
jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5.2.0
        with:
          python-version: "3.10"

      - name: Install system deps
        shell: bash
        run: |
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install --no-root --only dev --only linters --sync

      - name: Linting
        shell: bash
        run: poetry run inv hooks

  tests:
    needs: linting
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [Ubuntu, MacOS]
        python-version: ['3.10', '3.11', '3.12']
      fail-fast: true
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system deps
        shell: bash
        run: |
          pip install nox-poetry
          pip install poetry
          poetry config virtualenvs.in-project true

      - name: Run mypy with nox
        shell: bash
        run: nox --force-color -s mypy-${{ matrix.python-version }}

      - name: Run tests with nox
        shell: bash
        run: nox --force-color -s tests-${{ matrix.python-version }}

      - name: Run security check
        if: matrix.python-version == '3.12' && matrix.os == 'Ubuntu'
        shell: bash
        run: nox --force-color -s security

      - name: Upload coverage data
        uses: actions/upload-artifact@v4.4.0
        with:
          name: ${{ matrix.os }}-${{ matrix.python-version }}.coverage-data
          path: ".coverage.*"
          include-hidden-files: true
          retention-days: 2

  coverage:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5.2.0
        with:
          python-version: "3.10"

      - name: Install system deps
        shell: bash
        run: |
          pip install nox-poetry
          pip install poetry
          poetry config virtualenvs.in-project true

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: "*.coverage-data"
          merge-multiple: true

      - name: Create coverage report
        shell: bash
        run: |
          nox --force-color -s coverage-3.10 -- --fmt xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
